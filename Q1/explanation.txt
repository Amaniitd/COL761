Contains Q1 explanation
___________________________

Tools: gSpan, fsg, gaston

The trend observed:
> The time taken is inversely proportional to the thershold
> The time taken increases exponentially with decreasing the thershold
> fsg is slowest
> gaston is fastest
> gspan is faster than fsg

explanation:
> When the thershold is high, the number of frequent subgraphs is low
because of this a lot of subgraphs are pruned and the time taken is
less as compared to when the thershold is low.

> fsg is slowest because it uses a breadth first approach.
Candidates are generated and then checked for support. This is
inefficient as compared to gSpan which uses a depth first approach.
This is similar to apriori algorithm that we used in last assignment.
After Candidate generated, there are multiple database scans to check for support
which is inefficient because database scans are expensive.


> gSpan uses a depth first approach.
It use frequent subgraph generation and subgraph isomorphism
The pruning lowers the subgraph isomorphism checks and lower the number of new 
node generation in the dfs tree. This make it faster to gSpan

> gaston
   > Searching order:
        > frequent paths
        > frequent trees
        > frequent cycles
This reduces the subgraph isomorphism tests
The isomorphism testing is very expensive and gaston reduces it by
using the above order. Hence it is faster than gSpan.

